// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WaypointsApi.Models;

#nullable disable

namespace WaypointsApi.Migrations
{
    [DbContext(typeof(WaypointsDbContext))]
    partial class WaypointsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WaypointsApi.Models.BorderPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("WaypointId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WaypointId");

                    b.ToTable("BorderPoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 58.100000000000001,
                            Longitude = 10.9,
                            WaypointId = 1
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 58.200000000000003,
                            Longitude = 10.800000000000001,
                            WaypointId = 1
                        },
                        new
                        {
                            Id = 3,
                            Latitude = 58.299999999999997,
                            Longitude = 10.699999999999999,
                            WaypointId = 1
                        });
                });

            modelBuilder.Entity("WaypointsApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 58.100000000000001,
                            Longitude = 10.9
                        });
                });

            modelBuilder.Entity("WaypointsApi.Models.Waypoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Direction")
                        .HasColumnType("double precision");

                    b.Property<double>("EnterDistance")
                        .HasColumnType("double precision");

                    b.Property<double>("ExitDistance")
                        .HasColumnType("double precision");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<string>("Gate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ref")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Waypoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direction = 90.0,
                            EnterDistance = 35.0,
                            ExitDistance = 10.0,
                            Extra = "Extra",
                            Gate = "B",
                            Length = 30.0,
                            LocationId = 1,
                            Name = "Nösnäs",
                            Ref = "9025002000000111"
                        });
                });

            modelBuilder.Entity("WaypointsApi.Models.WaypointSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("DefaultEnterDistance")
                        .HasColumnType("double precision");

                    b.Property<double>("DefaultExitDistance")
                        .HasColumnType("double precision");

                    b.Property<double>("DefaultMaxEnteringDeviationAngle")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("WaypointSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultEnterDistance = 30.0,
                            DefaultExitDistance = 50.0,
                            DefaultMaxEnteringDeviationAngle = 45.0
                        });
                });

            modelBuilder.Entity("WaypointsApi.Models.BorderPoint", b =>
                {
                    b.HasOne("WaypointsApi.Models.Waypoint", null)
                        .WithMany("BorderPoints")
                        .HasForeignKey("WaypointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WaypointsApi.Models.Waypoint", b =>
                {
                    b.HasOne("WaypointsApi.Models.Location", "Location")
                        .WithOne("Waypoint")
                        .HasForeignKey("WaypointsApi.Models.Waypoint", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WaypointsApi.Models.Location", b =>
                {
                    b.Navigation("Waypoint");
                });

            modelBuilder.Entity("WaypointsApi.Models.Waypoint", b =>
                {
                    b.Navigation("BorderPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
